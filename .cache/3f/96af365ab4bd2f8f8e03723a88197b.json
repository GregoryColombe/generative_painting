{"id":"index.html","dependencies":[{"name":"./node_modules\\dat.gui\\build\\dat.gui.js","dynamic":true,"resolved":"E:\\Grégory\\Bureau\\Nouveau dossier\\toto\\node_modules\\dat.gui\\build\\dat.gui.js","parent":"E:\\Grégory\\Bureau\\Nouveau dossier\\toto\\index.html"},{"name":"_css_loader","parent":"E:\\Grégory\\Bureau\\Nouveau dossier\\toto\\index.html","resolved":"C:\\Users\\Grégory\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"}],"generated":{"html":"<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/simplex-noise/2.4.0/simplex-noise.min.js\"></script>\n    <title>Document</title>\n</head>\n<body>\n<style>* {\n        margin: 0;\n        padding: 0;\n    }\n    html, body {\n        width: 100%;\n        height: 100%;\n        background-color: #000;\n    }\n\n    canvas {\n        display: block;\n    }</style>\n\n<canvas id=\"canvas\"></canvas>\n<!-- <script src=\"classes/vector.js\"></script>\n<script src=\"classes/Circle.js\"></script> -->\n<script>var simplex = new SimplexNoise(Math.random);\nconsole.log(simplex);\nvar canvas = document.querySelector('#canvas');\nvar ctx = canvas.getContext('2d');\nvar WIDTH = canvas.width;\nvar HEIGHT = canvas.height;\nvar particules = [];\nvar nbPoints = 200;\nvar now = Date.now();\nvar lastTime = now;\nvar deltaTime = 6; //GUI\n// const gui = new dat.GUI()\n// let params = {\n// amplitude: 350,\n// offset: 0.5,\n// scale: 110,\n// timesAngle: 6\n// }\n// gui.add(params, \"amplitude\", 0, 700)\n// gui.add(params, \"offset\", 0.1, 0.9)\n// gui.add(params, \"scale\", 0, 200)\n// gui.add(params, \"timesAngle\", 0, 20)\n\nvar mouse = {\n  x: 1,\n  y: 1\n};\n\nfunction resize() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  WIDTH = canvas.width;\n  HEIGHT = canvas.height; // draw();\n  //update()\n}\n\ndocument.addEventListener('click', function (e) {\n  mouse.x = e.clientX;\n  mouse.y = e.clientY;\n  console.log('mouse.x : ' + mouse.x + 'mouse.y : ' + mouse.y);\n  update();\n});\n\nfunction getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n} // function drawCircles() {\n//     for (let i = 0; i < nbPoints; i++) {\n//         let position = {x: Math.random() * WIDTH, y: Math.random() * HEIGHT};\n//         let velocity = {x: Math.random() * .2, y: Math.random() * .2};\n//         let particule = new Circle(position, velocity);\n//         particules.push(particule);\n//         particule.draw(ctx)\n//     }\n// }\n// function draw() {\n//     ctx.clearRect(0, 0, WIDTH, HEIGHT);\n//     drawCircles();\n// }\n\n\nvar color = ['red', 'blue', 'pink'];\nvar ta = Math.floor(Math.random() * color.length);\nconsole.log(ta);\n\nfunction update() {\n  ctx.clearRect(0, 0, WIDTH, HEIGHT);\n\n  for (x = 0; x < WIDTH; x += 10) {\n    for (y = 0; y < HEIGHT; y += 10) {\n      var n = simplex.noise3D(x / 200, y / 1000, Date.now() * 0.0005);\n      ctx.globalAlpha = 0.6;\n      ctx.save();\n      ctx.translate(x, y * n);\n      ctx.rotate(45 * -n, 50); //ctx.scale(n * 10, n * 30);\n\n      ctx.fillStyle = '#aFabFF'; // color[]\n\n      ctx.fillRect(0, 0, 10, 10);\n      ctx.restore(); // let n = simplex.noise3D(x / 1000, y / 1000, Date.now() / 5000);\n      // ctx.globalAlpha = 0.6;\n      // ctx.save();\n      // ctx.translate(x , y );\n      // ctx.rotate(100 * n, 100 * n)\n      // ctx.scale(n * 30, n * 1);\n      // ctx.fillStyle = '#aFabFF';\n      // ctx.fillRect(0, 0, 10, 10);\n      // ctx.restore();\n    }\n  }\n\n  now = Date.now();\n  deltaTime = now - lastTime;\n  requestAnimationFrame(update);\n  lastTime = now; // console.log(deltaTime)\n}\n\nresize();\nwindow.addEventListener('resize', resize, false);\nresize();</script>\n<script type=\"text/javascript\" src=\"/579ce43dab720c425d6e913f7a88e894.js\"></script>\n\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"4bf17161091b7959029d36cbae5a4541","cacheData":{"env":{}}}